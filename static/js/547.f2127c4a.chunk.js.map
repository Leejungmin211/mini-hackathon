{"version":3,"file":"static/js/547.f2127c4a.chunk.js","mappings":"0PAIMA,EAAmBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kHAO7BC,EAASH,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wJAStBG,EAAML,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,ibA0BP,SAASK,IACpB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,SAAQC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAsBT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA3BE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAClBG,GAAuBb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAGdG,EAAG,qDAAAC,OAAwDf,EAAI,WAAAe,OADrDC,oCAEZC,EAAO,mCAAAF,OAAsCH,EAAI,QAE/CM,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACMC,EAAAA,EAAAA,GAAM,CACtBC,OAAS,MACTf,IAAMA,IAEVgB,MAAK,SAAAC,GACLC,QAAQC,IAAIF,GACZ1B,EAAQ6B,KAAKC,MAAuC,IAA/BJ,EAAIK,KAAKC,KAAKjC,KAAO,SAAiB,IAC3DK,EAAOsB,EAAIK,KAAKE,QAAQ,GAAGD,MAC3BxB,EAAQkB,EAAIK,KAAKE,QAAQ,GAAG1B,KAC7B,IAAE,OATUa,EAAAc,KAAA,wBAAAd,EAAAe,OAAA,GAAAjB,EAAA,KAUlB,kBAXkB,OAAAJ,EAAAsB,MAAA,KAAAC,UAAA,KAiBnB,OAJAC,EAAAA,EAAAA,YAAU,WACNzB,GACJ,GAAG,CAAClB,KAGA4C,EAAAA,EAAAA,MAACzD,EAAgB,CAAA0D,SAAA,EACfD,EAAAA,EAAAA,MAACrD,EAAM,CAACuD,MAAO9C,EAAM+C,SApBP,SAACC,GAAQ/C,EAAQ+C,EAAEC,OAAOH,MAAO,EAoBJD,SAAA,EACzCK,EAAAA,EAAAA,KAAA,UAAQJ,MAAM,QAAOD,SAAC,kBACtBK,EAAAA,EAAAA,KAAA,UAAQJ,MAAM,cAAaD,SAAC,wBAC5BK,EAAAA,EAAAA,KAAA,UAAQJ,MAAM,eAAcD,SAAC,kBAC7BK,EAAAA,EAAAA,KAAA,UAAQJ,MAAM,UAASD,SAAC,kBACxBK,EAAAA,EAAAA,KAAA,UAAQJ,MAAM,QAAOD,SAAC,kBACtBK,EAAAA,EAAAA,KAAA,UAAQJ,MAAM,QAAOD,SAAC,kBACtBK,EAAAA,EAAAA,KAAA,UAAQJ,MAAM,OAAMD,SAAC,qBAEvBD,EAAAA,EAAAA,MAACnD,EAAG,CAAAoD,SAAA,EACFK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWN,SAAE7C,KAC5B4C,EAAAA,EAAAA,MAAA,OAAKO,UAAU,WAAUN,SAAA,EACxBD,EAAAA,EAAAA,MAAA,OAAKO,UAAU,YAAWN,SAAA,CAAEzC,EAAK,cACjC8C,EAAAA,EAAAA,KAAA,OAAAL,SAAMrC,QAEP0C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAWC,IAAKnC,SAI3C,C","sources":["component/Weather.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\n\nconst WeatherContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nwidth: 300px;\nalign-items: center;\n`\nconst Select = styled.select`\nwidth: 170px;\nheight: 35px;\nborder: 3px solid #ffbbc7;\nborder-radius: 10px;\nbackground: #ffffff00;\nfont-size: 15px;\npadding: 0px 10px;\n`\nconst Div = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nmargin: 15px;\n> .city-name{\n    font-size: 35px;\n    color: rgb(194 131 239);\n    font-weight: 500;\n}\n> .city-img{\n    width: 100px;\n    position: absolute;\n    bottom: -70px;\n}\n> .city-div{\n    display: flex;\n    align-items: baseline;\n    justify-content: center;\n    > .city-temp{\n        font-size: 25px;\n        padding: 10px;\n    }\n}\n`\n\nexport default function Weather(){\n    const [city, setCity] = useState('Seoul')\n    const [temp, setTemp] = useState(\"\")\n    const [sky, setSky] = useState(\"\")\n    const [icon, setIcon] =useState(\"\")\n\n    const API_KEY = process.env.REACT_APP_API_KEY;\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`\n    let iconUrl = `http://openweathermap.org/img/w/${icon}.png`\n    const handleChage = (e) => { setCity(e.target.value) }\n    const searchWeather = async () => {\n              const res = await axios({\n                method : 'get',\n                url : url\n            })\n           .then(res => {\n            console.log(res)\n            setTemp(Math.round(((res.data.main.temp - 273.15) * 10)) / 10)\n            setSky(res.data.weather[0].main)\n            setIcon(res.data.weather[0].icon)\n           })\n    }\n\n    useEffect(() => {\n        searchWeather()\n    }, [city])\n\n    return(\n        <WeatherContainer>\n          <Select value={city} onChange={handleChage}>\n            <option value=\"Seoul\">서울</option>\n            <option value=\"Gyeonggi-do\">경기도</option>\n            <option value=\"Gangneung-si\">강릉</option>\n            <option value=\"Daejeon\">대전</option>\n            <option value=\"Daegu\">대구</option>\n            <option value=\"Busan\">부산</option>\n            <option value=\"Jeju\">제주</option>\n          </Select>\n          <Div>\n            <div className=\"city-name\">{city}</div>\n            <div className=\"city-div\">\n             <div className=\"city-temp\">{temp} ℃</div>\n             <div>{sky}</div> \n            </div>\n            <img className=\"city-img\" src={iconUrl} />\n          </Div>\n       </WeatherContainer>\n    )\n}"],"names":["WeatherContainer","styled","_templateObject","_taggedTemplateLiteral","Select","_templateObject2","Div","_templateObject3","Weather","_useState","useState","_useState2","_slicedToArray","city","setCity","_useState3","_useState4","temp","setTemp","_useState5","_useState6","sky","setSky","_useState7","_useState8","icon","setIcon","url","concat","process","iconUrl","searchWeather","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","method","then","res","console","log","Math","round","data","main","weather","sent","stop","apply","arguments","useEffect","_jsxs","children","value","onChange","e","target","_jsx","className","src"],"sourceRoot":""}