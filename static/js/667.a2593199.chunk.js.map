{"version":3,"file":"static/js/667.a2593199.chunk.js","mappings":"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","sources":["component/Todo.js","component/AddTodo.js","component/TodoListDate.js","pages/TodoList.js"],"sourcesContent":["import styled from \"styled-components\"\nimport { RiCloseFill } from 'react-icons/ri';\n\nconst Li = styled.li`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nborder-radius: 10px;\nheight: 55px;\nmargin: 7px;\npadding: 10px 15px;\nfont-size: 17px;\nletter-spacing: 0.7px;\nbackground-color: #dde9f3;\n`\nconst Div = styled.div`\npadding: 0px 10px;\n > input{\n     margin-right: 10px;\n  }\n`\nconst Button = styled.button`\nborder: none;\nbackground: rgba(255, 255, 255, 0);\n  > .close-icon{\n    font-size: 20px;\n  }\n`\n\nexport default function Todo({todo, onUpdate, onDelete}) {\n    const { text, status } = todo\n    const handleChange = (e) => {\n      const status = e.target.checked ? 'Completed' : 'Active'\n      onUpdate({...todo, status})\n    }\n    return(\n        <Li>\n          <Div>\n          <input type=\"checkbox\" id=\"checkbox\" checked={status === 'Completed'} onChange={handleChange}/>\n          <label htmlFor=\"checkbox\">{text}</label>\n          </Div>\n          <Button onClick={() => onDelete(todo)}><RiCloseFill className=\"close-icon\"/></Button>\n        </Li>\n    )\n}","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { RiHeartAddLine } from 'react-icons/ri';\nimport styled from \"styled-components\"\n\n const Div = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin: 20px 0px 10px 0px;\n`;\nconst Form =styled.form`\nmargin: 15px 0px;\n   > .add-button{\n    border: 2px solid #fcc8d1;\n    border-radius: 10px;\n    background: linear-gradient(180deg, rgb(252 200 209 / 75%), #ffe6e670);\n    font-size: 20px;\n    width: 60px;\n    height: 45px;\n     &:hover{\n      background: linear-gradient(180deg, #ffe6e670, rgb(252 200 209 / 75%));\n      transition: all 3s;\n     }\n   }\n`\n  const Input = styled.input`\n  width: 390px;\n  height: 45px;\n  font-size: 15px;\n  margin-right: 10px;\n  border-radius: 10px;\n  border: none;\n  padding: 0px 10px;\n    &:focus{\n      outline: 2px solid #fcc8d1;\n    }\n  `\n  const Button = styled.button`\n  border: none;\n  background-color: #ffffff00;\n  margin-right: 10px;\n   > .heart-add{\n    width: 30px;\n    height: 30px;\n    color: rgb(111 111 111);\n   }\n  `\n\nexport default function AddTodo({onAdd, today, tomorrow}) {\n    const [isOpen, setIsOpen] = useState(false)\n    const [text, setText] = useState('')\n\n    const openInputHandler = () => {setIsOpen(!isOpen)}\n    const handleTextChange = (e) => {setText(e.target.value)}\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(text.trim().length === 0) return\n        if(today){\n          onAdd({id: uuidv4(), text, status:'Active', date: today })\n          setText('')\n          setIsOpen(false)\n        }\n        if(tomorrow){\n          onAdd({id: uuidv4(), text, status:'Active', date: tomorrow })\n          setText('')\n          setIsOpen(false)\n        }\n    }\n  \n  return (\n    <Div>\n         {isOpen && <Form onSubmit={handleSubmit}>\n           <Input type=\"text\" placeholder=\"Todo를 입력해주세요\" value={text} onChange={handleTextChange}/>\n           <button className=\"add-button\">Add</button>\n           </Form>}\n           <Button onClick={openInputHandler}><RiHeartAddLine className=\"heart-add\"/></Button>\n    </Div>\n  )\n}\n","import styled from \"styled-components\"\nimport Todo from \"./Todo\"\nimport AddTodo from \"./AddTodo\"\nimport { useState } from \"react\"\nimport TodoList from \"../pages/TodoList\"\n\nconst TodoPost = styled.div`\nwidth: 500px\n`\nconst Div = styled.div`\ndisplay: flex;\nalign-items: baseline;\nmargin: 12px;\nfont-size: 25px;\nfont-weight: 500;\njustify-content: space-between;\n  > .day-span{\n  font-size: 17px;\n  font-weight: 400;\n }\n.day{\n  > .plan-todo{\n    font-size: 17px;\n    color: rgb(10 105 233);\n    padding-left: 15px;\n  }\n}\n \n`\nconst Ul = styled.ul`\nmargin-bottom: 70px;\nborder: 1.5px solid #fcc8d1;\nborder-radius: 10px;\npadding: 10px;\n`\n\nexport default function TodoListDate({today, tomorrow, todos, setTodos}) {\n  const handleAdd = (todo) => {setTodos([...todos, todo])}\n  const handleUpdate = (updated) => {setTodos(todos.map((item) => item.id === updated.id ? updated : item))}\n  const handleDelete = (deleted) => {setTodos(todos.filter((item) => item.id !== deleted.id))}\n  const todayPlan = todos.filter((todo) => {\n    if(todo.status === 'Active' && todo.date === today) return todo\n  })\n  const tomorrowPlan = todos.filter((todo) => {\n    if(todo.status === 'Active' && todo.date === tomorrow) return todo\n  })\n\n  console.log(todos)\n  \n  const todayTodo = todos.filter((todo) => {\n    if(todo.date === today) return todo\n  })\n\n  const tomorrowTodo = todos.filter((todo) => {\n    if(todo.date === tomorrow) return todo\n  })  \n  \n    return(\n      <TodoPost>\n        <Div>\n          <div className=\"day\">\n           오늘\n            <span className=\"plan-todo\">\n              {todayPlan.length > 0 ? `할 일 ${todayPlan.length}개 남음` : '완료' }</span>\n          </div>\n            <span className=\"day-span\">{today}</span>\n        </Div>\n        <Ul>    \n          {todayTodo.map((item) => \n          <Todo key={item.id} todo={item} onUpdate={handleUpdate} onDelete={handleDelete}/>)}\n          <AddTodo onAdd={handleAdd} today={today}/>\n        </Ul>\n        <Div>\n        <div className=\"day\">\n          내일\n          <span className=\"plan-todo\">\n            {tomorrowPlan.length > 0 ? `할 일 ${tomorrowPlan.length}개 남음` : '완료' }</span>\n        </div>\n          <span className=\"day-span\">{tomorrow}</span>\n        </Div>\n        <Ul>    \n         {tomorrowTodo.map((item) => \n          <Todo key={item.id} todo={item} onUpdate={handleUpdate} onDelete={handleDelete}/>)}\n          <AddTodo onAdd={handleAdd} tomorrow={tomorrow}/>\n        </Ul>\n    </TodoPost>\n  )\n}\n\n\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport TodoListDate from \"../component/TodoListDate\"\n\nconst Section = styled.section`\nheight: 100%;\noverflow: auto;\ndisplay: flex;\njustify-content: center;\n`\nexport default function TodoList() {\n  const today = koreaDate()\n  const tomorrow = koreaNextDate()\n  const [todos, setTodos] = useState(() => readTodos());\n    \n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  return(\n      <Section>\n        <TodoListDate today={today} tomorrow={tomorrow} todos={todos} setTodos={setTodos}/>   \n      </Section>\n    )\n}\n\nfunction readTodos() {\n  console.log('readTodos');\n  const todos = localStorage.getItem('todos');\n  return todos ? JSON.parse(todos) : [];\n}\n\nfunction koreaDate() {\n  const today = new Date();\n  const dateString = today.toLocaleDateString('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n  const dayName = today.toLocaleDateString('ko-KR', {\n    weekday: 'long',\n  });\n  \n  return `${dateString} ${dayName}`;\n}\n\nfunction koreaNextDate() {\n  const today = new Date();\n  const tomorrow = new Date(today.setDate(today.getDate() +1));\n  const dateString = tomorrow.toLocaleDateString('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n  const dayName = tomorrow.toLocaleDateString('ko-KR', {\n    weekday: 'long',\n  });\n  \n  return `${dateString} ${dayName}`;\n}\n\n"],"names":["Li","styled","_templateObject","_taggedTemplateLiteral","Div","_templateObject2","Button","_templateObject3","Todo","_ref","todo","onUpdate","onDelete","text","status","_jsxs","children","_jsx","type","id","checked","onChange","e","target","_objectSpread","htmlFor","onClick","RiCloseFill","className","Form","Input","_templateObject4","AddTodo","onAdd","today","tomorrow","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","_useState3","_useState4","setText","onSubmit","preventDefault","trim","length","uuidv4","date","placeholder","value","RiHeartAddLine","TodoPost","Ul","TodoListDate","todos","setTodos","handleAdd","concat","_toConsumableArray","handleUpdate","updated","map","item","handleDelete","deleted","filter","todayPlan","tomorrowPlan","console","log","todayTodo","tomorrowTodo","Section","TodoList","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","koreaDate","setDate","getDate","koreaNextDate","localStorage","getItem","JSON","parse","readTodos","useEffect","setItem","stringify"],"sourceRoot":""}